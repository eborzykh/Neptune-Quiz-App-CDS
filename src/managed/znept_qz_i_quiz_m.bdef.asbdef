//
managed implementation in class zbp_nept_qz_i_quiz_m unique;
strict ( 1 );

define behavior for ZNEPT_QZ_I_QUIZ_M alias Quiz
persistent table znept_qz_tst
lock master
authorization master ( instance )
{
  create;
  update;
  delete;

  field ( readonly ) TestId, UploadAt, UploadOn, Upload_By_Name, Part_Count, Question_Count, UI_Published;
  field ( mandatory ) Description;

  association _Part { create; }

  mapping for znept_qz_tst
  {
    TestId = test_id;
    Description = description;
    Published = published;

    UploadAt = upload_at;
    UploadOn = upload_on;
    UploadBy = upload_by;
  }
}

define behavior for ZNEPT_QZ_I_PART_M alias Part
persistent table znept_qz_prt
lock dependent by _Quiz
authorization dependent by _Quiz
{
  update;
  delete;

  field ( readonly ) TestId;
  field ( mandatory ) Description;

  association _Quiz;
  association _Question { create; }

  mapping for ZNEPT_QZ_PRT
  {
    TestId = test_id;
    PartId = part_id;
    Description = description;
  }
}

define behavior for ZNEPT_QZ_I_QUESTION_M alias Question
persistent table znept_qz_qst
lock dependent by _Quiz
authorization dependent by _Quiz
{
  update;
  delete;

  field ( readonly ) TestId, PartId;
  field ( mandatory ) Question;

  association _Quiz;
  association _Part;
  association _Variant { create; }

  mapping for ZNEPT_QZ_QST
  {
    TestId = test_id;
    PartId = part_id;
    QuestionId = question_id;
    Question = question;
    Explanation = explanation;
  }
}

define behavior for ZNEPT_QZ_I_VARIANT_M alias Variant
persistent table znept_qz_var
lock dependent by _Quiz
authorization dependent by _Quiz
{
  update;
  delete;

  field ( readonly ) TestId, QuestionId;
  field ( mandatory ) Variant;

  association _Quiz;
  association _Question;

  mapping for znept_qz_var
  {
    TestId = test_id;
    QuestionId = question_id;
    VariantId = variant_id;
    Variant = variant;
    Correct = correct;
  }
}